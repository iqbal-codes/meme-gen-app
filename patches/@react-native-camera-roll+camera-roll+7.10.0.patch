diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/0d100a0f854807383b7236c12be7cd85/results.bin b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/0d100a0f854807383b7236c12be7cd85/results.bin
new file mode 100644
index 0000000..0d259dd
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/0d100a0f854807383b7236c12be7cd85/results.bin
@@ -0,0 +1 @@
+o/classes
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/0d100a0f854807383b7236c12be7cd85/transformed/classes/classes_dex/classes.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/0d100a0f854807383b7236c12be7cd85/transformed/classes/classes_dex/classes.dex
new file mode 100644
index 0000000..2e4d48a
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/0d100a0f854807383b7236c12be7cd85/transformed/classes/classes_dex/classes.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/results.bin b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/results.bin
new file mode 100644
index 0000000..7ed749e
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/results.bin
@@ -0,0 +1 @@
+o/bundleLibRuntimeToDirDebug
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/BuildConfig.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/BuildConfig.dex
new file mode 100644
index 0000000..6df9a52
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/BuildConfig.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$1.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$1.dex
new file mode 100644
index 0000000..87869d8
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$1.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$2.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$2.dex
new file mode 100644
index 0000000..a40bfc1
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$2.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$DeletePhotos.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$DeletePhotos.dex
new file mode 100644
index 0000000..3192acb
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$DeletePhotos.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$GetMediaTask.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$GetMediaTask.dex
new file mode 100644
index 0000000..d3c7d15
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$GetMediaTask.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$SaveToCameraRoll.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$SaveToCameraRoll.dex
new file mode 100644
index 0000000..bef56cc
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule$SaveToCameraRoll.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule.dex
new file mode 100644
index 0000000..78073ed
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollModule.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollPackage$1.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollPackage$1.dex
new file mode 100644
index 0000000..aec025e
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollPackage$1.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollPackage.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollPackage.dex
new file mode 100644
index 0000000..011c21f
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/CameraRollPackage.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/NativeCameraRollModuleSpec.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/NativeCameraRollModuleSpec.dex
new file mode 100644
index 0000000..83ff6d5
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/NativeCameraRollModuleSpec.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/NativeCameraRollPermissionModuleSpec.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/NativeCameraRollPermissionModuleSpec.dex
new file mode 100644
index 0000000..7cc2b83
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/NativeCameraRollPermissionModuleSpec.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/Utils.dex b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/Utils.dex
new file mode 100644
index 0000000..3ed88c8
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/bundleLibRuntimeToDirDebug_dex/com/reactnativecommunity/cameraroll/Utils.dex differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/desugar_graph.bin b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/desugar_graph.bin
new file mode 100644
index 0000000..1a4a2cd
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/.transforms/1580c75eb379dd8988e554faae6ae926/transformed/bundleLibRuntimeToDirDebug/desugar_graph.bin differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/buildConfig/debug/com/reactnativecommunity/cameraroll/BuildConfig.java b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/buildConfig/debug/com/reactnativecommunity/cameraroll/BuildConfig.java
new file mode 100644
index 0000000..be91512
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/buildConfig/debug/com/reactnativecommunity/cameraroll/BuildConfig.java
@@ -0,0 +1,10 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.reactnativecommunity.cameraroll;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = Boolean.parseBoolean("true");
+  public static final String LIBRARY_PACKAGE_NAME = "com.reactnativecommunity.cameraroll";
+  public static final String BUILD_TYPE = "debug";
+}
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/java/com/reactnativecommunity/cameraroll/NativeCameraRollModuleSpec.java b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/java/com/reactnativecommunity/cameraroll/NativeCameraRollModuleSpec.java
new file mode 100644
index 0000000..46c67e9
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/java/com/reactnativecommunity/cameraroll/NativeCameraRollModuleSpec.java
@@ -0,0 +1,68 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJavaSpec.js
+ *
+ * @nolint
+ */
+
+package com.reactnativecommunity.cameraroll;
+
+import com.facebook.proguard.annotations.DoNotStrip;
+import com.facebook.react.bridge.Promise;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReactContextBaseJavaModule;
+import com.facebook.react.bridge.ReactMethod;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.turbomodule.core.interfaces.TurboModule;
+import javax.annotation.Nonnull;
+
+public abstract class NativeCameraRollModuleSpec extends ReactContextBaseJavaModule implements TurboModule {
+  public static final String NAME = "RNCCameraRoll";
+
+  public NativeCameraRollModuleSpec(ReactApplicationContext reactContext) {
+    super(reactContext);
+  }
+
+  @Override
+  public @Nonnull String getName() {
+    return NAME;
+  }
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void saveToCameraRoll(String uri, ReadableMap options, Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getPhotos(ReadableMap params, Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getAlbums(ReadableMap params, Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void deletePhotos(ReadableArray photoUris, Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getPhotoByInternalID(String internalID, ReadableMap options, Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void getPhotoThumbnail(String internalID, ReadableMap options, Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void addListener(String eventName);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void removeListeners(double count);
+}
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/java/com/reactnativecommunity/cameraroll/NativeCameraRollPermissionModuleSpec.java b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/java/com/reactnativecommunity/cameraroll/NativeCameraRollPermissionModuleSpec.java
new file mode 100644
index 0000000..f7159a4
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/java/com/reactnativecommunity/cameraroll/NativeCameraRollPermissionModuleSpec.java
@@ -0,0 +1,58 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJavaSpec.js
+ *
+ * @nolint
+ */
+
+package com.reactnativecommunity.cameraroll;
+
+import com.facebook.proguard.annotations.DoNotStrip;
+import com.facebook.react.bridge.Promise;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReactContextBaseJavaModule;
+import com.facebook.react.bridge.ReactMethod;
+import com.facebook.react.turbomodule.core.interfaces.TurboModule;
+import javax.annotation.Nonnull;
+
+public abstract class NativeCameraRollPermissionModuleSpec extends ReactContextBaseJavaModule implements TurboModule {
+  public static final String NAME = "RNCCameraRollPermission";
+
+  public NativeCameraRollPermissionModuleSpec(ReactApplicationContext reactContext) {
+    super(reactContext);
+  }
+
+  @Override
+  public @Nonnull String getName() {
+    return NAME;
+  }
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void checkPermission(String content, Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void requestReadWritePermission(Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void requestAddOnlyPermission(Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void refreshPhotoSelection(Promise promise);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void addListener(String eventName);
+
+  @ReactMethod
+  @DoNotStrip
+  public abstract void removeListeners(double count);
+}
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/CMakeLists.txt b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/CMakeLists.txt
new file mode 100644
index 0000000..c34a223
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/CMakeLists.txt
@@ -0,0 +1,36 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+cmake_minimum_required(VERSION 3.13)
+set(CMAKE_VERBOSE_MAKEFILE on)
+
+file(GLOB react_codegen_SRCS CONFIGURE_DEPENDS *.cpp react/renderer/components/rncameraroll/*.cpp)
+
+add_library(
+  react_codegen_rncameraroll
+  OBJECT
+  ${react_codegen_SRCS}
+)
+
+target_include_directories(react_codegen_rncameraroll PUBLIC . react/renderer/components/rncameraroll)
+
+target_link_libraries(
+  react_codegen_rncameraroll
+  fbjni
+  jsi
+  # We need to link different libraries based on whether we are building rncore or not, that's necessary
+  # because we want to break a circular dependency between react_codegen_rncore and reactnative
+  reactnative
+)
+
+target_compile_options(
+  react_codegen_rncameraroll
+  PRIVATE
+  -DLOG_TAG=\"ReactNative\"
+  -fexceptions
+  -frtti
+  -std=c++20
+  -Wall
+)
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/ComponentDescriptors.cpp b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/ComponentDescriptors.cpp
new file mode 100644
index 0000000..f5b55b8
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/ComponentDescriptors.cpp
@@ -0,0 +1,22 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorCpp.js
+ */
+
+#include <react/renderer/components/rncameraroll/ComponentDescriptors.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+void rncameraroll_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry) {
+
+}
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/ComponentDescriptors.h b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/ComponentDescriptors.h
new file mode 100644
index 0000000..db4b600
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/ComponentDescriptors.h
@@ -0,0 +1,24 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rncameraroll/ShadowNodes.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+
+
+void rncameraroll_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry);
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/EventEmitters.cpp b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/EventEmitters.cpp
new file mode 100644
index 0000000..0fa3d23
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/EventEmitters.cpp
@@ -0,0 +1,16 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterCpp.js
+ */
+
+#include <react/renderer/components/rncameraroll/EventEmitters.h>
+
+
+namespace facebook::react {
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/EventEmitters.h b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/EventEmitters.h
new file mode 100644
index 0000000..2845a63
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/EventEmitters.h
@@ -0,0 +1,17 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewEventEmitter.h>
+
+
+namespace facebook::react {
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/Props.cpp b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/Props.cpp
new file mode 100644
index 0000000..1a5177a
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/Props.cpp
@@ -0,0 +1,19 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsCpp.js
+ */
+
+#include <react/renderer/components/rncameraroll/Props.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/Props.h b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/Props.h
new file mode 100644
index 0000000..870864b
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/Props.h
@@ -0,0 +1,18 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsH.js
+ */
+#pragma once
+
+
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/ShadowNodes.cpp b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/ShadowNodes.cpp
new file mode 100644
index 0000000..fcd2758
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/ShadowNodes.cpp
@@ -0,0 +1,17 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeCpp.js
+ */
+
+#include <react/renderer/components/rncameraroll/ShadowNodes.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/ShadowNodes.h b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/ShadowNodes.h
new file mode 100644
index 0000000..58461a2
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/ShadowNodes.h
@@ -0,0 +1,23 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rncameraroll/EventEmitters.h>
+#include <react/renderer/components/rncameraroll/Props.h>
+#include <react/renderer/components/rncameraroll/States.h>
+#include <react/renderer/components/view/ConcreteViewShadowNode.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/States.cpp b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/States.cpp
new file mode 100644
index 0000000..58c3674
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/States.cpp
@@ -0,0 +1,16 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateCpp.js
+ */
+#include <react/renderer/components/rncameraroll/States.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/States.h b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/States.h
new file mode 100644
index 0000000..c011ed8
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/States.h
@@ -0,0 +1,19 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateH.js
+ */
+#pragma once
+
+#ifdef ANDROID
+#include <folly/dynamic.h>
+#endif
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
\ No newline at end of file
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/rncamerarollJSI-generated.cpp b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/rncamerarollJSI-generated.cpp
new file mode 100644
index 0000000..2d7edb9
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/rncamerarollJSI-generated.cpp
@@ -0,0 +1,126 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleCpp.js
+ */
+
+#include "rncamerarollJSI.h"
+
+namespace facebook::react {
+
+static jsi::Value __hostFunction_NativeCameraRollModuleCxxSpecJSI_saveToCameraRoll(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeCameraRollModuleCxxSpecJSI *>(&turboModule)->saveToCameraRoll(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
+    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
+  );
+}
+static jsi::Value __hostFunction_NativeCameraRollModuleCxxSpecJSI_getPhotos(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeCameraRollModuleCxxSpecJSI *>(&turboModule)->getPhotos(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
+  );
+}
+static jsi::Value __hostFunction_NativeCameraRollModuleCxxSpecJSI_getAlbums(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeCameraRollModuleCxxSpecJSI *>(&turboModule)->getAlbums(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
+  );
+}
+static jsi::Value __hostFunction_NativeCameraRollModuleCxxSpecJSI_deletePhotos(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeCameraRollModuleCxxSpecJSI *>(&turboModule)->deletePhotos(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asArray(rt)
+  );
+}
+static jsi::Value __hostFunction_NativeCameraRollModuleCxxSpecJSI_getPhotoByInternalID(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeCameraRollModuleCxxSpecJSI *>(&turboModule)->getPhotoByInternalID(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
+    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
+  );
+}
+static jsi::Value __hostFunction_NativeCameraRollModuleCxxSpecJSI_getPhotoThumbnail(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeCameraRollModuleCxxSpecJSI *>(&turboModule)->getPhotoThumbnail(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
+    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
+  );
+}
+static jsi::Value __hostFunction_NativeCameraRollModuleCxxSpecJSI_addListener(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeCameraRollModuleCxxSpecJSI *>(&turboModule)->addListener(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeCameraRollModuleCxxSpecJSI_removeListeners(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeCameraRollModuleCxxSpecJSI *>(&turboModule)->removeListeners(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
+  );
+  return jsi::Value::undefined();
+}
+
+NativeCameraRollModuleCxxSpecJSI::NativeCameraRollModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
+  : TurboModule("RNCCameraRoll", jsInvoker) {
+  methodMap_["saveToCameraRoll"] = MethodMetadata {2, __hostFunction_NativeCameraRollModuleCxxSpecJSI_saveToCameraRoll};
+  methodMap_["getPhotos"] = MethodMetadata {1, __hostFunction_NativeCameraRollModuleCxxSpecJSI_getPhotos};
+  methodMap_["getAlbums"] = MethodMetadata {1, __hostFunction_NativeCameraRollModuleCxxSpecJSI_getAlbums};
+  methodMap_["deletePhotos"] = MethodMetadata {1, __hostFunction_NativeCameraRollModuleCxxSpecJSI_deletePhotos};
+  methodMap_["getPhotoByInternalID"] = MethodMetadata {2, __hostFunction_NativeCameraRollModuleCxxSpecJSI_getPhotoByInternalID};
+  methodMap_["getPhotoThumbnail"] = MethodMetadata {2, __hostFunction_NativeCameraRollModuleCxxSpecJSI_getPhotoThumbnail};
+  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeCameraRollModuleCxxSpecJSI_addListener};
+  methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeCameraRollModuleCxxSpecJSI_removeListeners};
+}
+static jsi::Value __hostFunction_NativeCameraRollPermissionModuleCxxSpecJSI_checkPermission(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeCameraRollPermissionModuleCxxSpecJSI *>(&turboModule)->checkPermission(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
+  );
+}
+static jsi::Value __hostFunction_NativeCameraRollPermissionModuleCxxSpecJSI_requestReadWritePermission(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeCameraRollPermissionModuleCxxSpecJSI *>(&turboModule)->requestReadWritePermission(
+    rt
+  );
+}
+static jsi::Value __hostFunction_NativeCameraRollPermissionModuleCxxSpecJSI_requestAddOnlyPermission(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeCameraRollPermissionModuleCxxSpecJSI *>(&turboModule)->requestAddOnlyPermission(
+    rt
+  );
+}
+static jsi::Value __hostFunction_NativeCameraRollPermissionModuleCxxSpecJSI_refreshPhotoSelection(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeCameraRollPermissionModuleCxxSpecJSI *>(&turboModule)->refreshPhotoSelection(
+    rt
+  );
+}
+static jsi::Value __hostFunction_NativeCameraRollPermissionModuleCxxSpecJSI_addListener(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeCameraRollPermissionModuleCxxSpecJSI *>(&turboModule)->addListener(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeCameraRollPermissionModuleCxxSpecJSI_removeListeners(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeCameraRollPermissionModuleCxxSpecJSI *>(&turboModule)->removeListeners(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
+  );
+  return jsi::Value::undefined();
+}
+
+NativeCameraRollPermissionModuleCxxSpecJSI::NativeCameraRollPermissionModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
+  : TurboModule("RNCCameraRollPermission", jsInvoker) {
+  methodMap_["checkPermission"] = MethodMetadata {1, __hostFunction_NativeCameraRollPermissionModuleCxxSpecJSI_checkPermission};
+  methodMap_["requestReadWritePermission"] = MethodMetadata {0, __hostFunction_NativeCameraRollPermissionModuleCxxSpecJSI_requestReadWritePermission};
+  methodMap_["requestAddOnlyPermission"] = MethodMetadata {0, __hostFunction_NativeCameraRollPermissionModuleCxxSpecJSI_requestAddOnlyPermission};
+  methodMap_["refreshPhotoSelection"] = MethodMetadata {0, __hostFunction_NativeCameraRollPermissionModuleCxxSpecJSI_refreshPhotoSelection};
+  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeCameraRollPermissionModuleCxxSpecJSI_addListener};
+  methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeCameraRollPermissionModuleCxxSpecJSI_removeListeners};
+}
+
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/rncamerarollJSI.h b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/rncamerarollJSI.h
new file mode 100644
index 0000000..71e1838
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/react/renderer/components/rncameraroll/rncamerarollJSI.h
@@ -0,0 +1,401 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/TurboModule.h>
+#include <react/bridging/Bridging.h>
+
+namespace facebook::react {
+
+
+  
+#pragma mark - NativeCameraRollModuleAlbum
+
+template <typename P0, typename P1, typename P2, typename P3, typename P4>
+struct NativeCameraRollModuleAlbum {
+  P0 id;
+  P1 title;
+  P2 count;
+  P3 type;
+  P4 subtype;
+  bool operator==(const NativeCameraRollModuleAlbum &other) const {
+    return id == other.id && title == other.title && count == other.count && type == other.type && subtype == other.subtype;
+  }
+};
+
+template <typename T>
+struct NativeCameraRollModuleAlbumBridging {
+  static T types;
+
+  static T fromJs(
+      jsi::Runtime &rt,
+      const jsi::Object &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    T result{
+      bridging::fromJs<decltype(types.id)>(rt, value.getProperty(rt, "id"), jsInvoker),
+      bridging::fromJs<decltype(types.title)>(rt, value.getProperty(rt, "title"), jsInvoker),
+      bridging::fromJs<decltype(types.count)>(rt, value.getProperty(rt, "count"), jsInvoker),
+      bridging::fromJs<decltype(types.type)>(rt, value.getProperty(rt, "type"), jsInvoker),
+      bridging::fromJs<decltype(types.subtype)>(rt, value.getProperty(rt, "subtype"), jsInvoker)};
+    return result;
+  }
+
+#ifdef DEBUG
+  static jsi::String idToJs(jsi::Runtime &rt, decltype(types.id) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static jsi::String titleToJs(jsi::Runtime &rt, decltype(types.title) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static double countToJs(jsi::Runtime &rt, decltype(types.count) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static jsi::String typeToJs(jsi::Runtime &rt, decltype(types.type) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static jsi::String subtypeToJs(jsi::Runtime &rt, decltype(types.subtype) value) {
+    return bridging::toJs(rt, value);
+  }
+#endif
+
+  static jsi::Object toJs(
+      jsi::Runtime &rt,
+      const T &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    auto result = facebook::jsi::Object(rt);
+    result.setProperty(rt, "id", bridging::toJs(rt, value.id, jsInvoker));
+    result.setProperty(rt, "title", bridging::toJs(rt, value.title, jsInvoker));
+    result.setProperty(rt, "count", bridging::toJs(rt, value.count, jsInvoker));
+    result.setProperty(rt, "type", bridging::toJs(rt, value.type, jsInvoker));
+    if (value.subtype) {
+      result.setProperty(rt, "subtype", bridging::toJs(rt, value.subtype.value(), jsInvoker));
+    }
+    return result;
+  }
+};
+
+
+
+#pragma mark - NativeCameraRollModulePhotoIdentifier
+
+template <typename P0>
+struct NativeCameraRollModulePhotoIdentifier {
+  P0 node;
+  bool operator==(const NativeCameraRollModulePhotoIdentifier &other) const {
+    return node == other.node;
+  }
+};
+
+template <typename T>
+struct NativeCameraRollModulePhotoIdentifierBridging {
+  static T types;
+
+  static T fromJs(
+      jsi::Runtime &rt,
+      const jsi::Object &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    T result{
+      bridging::fromJs<decltype(types.node)>(rt, value.getProperty(rt, "node"), jsInvoker)};
+    return result;
+  }
+
+#ifdef DEBUG
+  static jsi::Object nodeToJs(jsi::Runtime &rt, decltype(types.node) value) {
+    return bridging::toJs(rt, value);
+  }
+#endif
+
+  static jsi::Object toJs(
+      jsi::Runtime &rt,
+      const T &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    auto result = facebook::jsi::Object(rt);
+    result.setProperty(rt, "node", bridging::toJs(rt, value.node, jsInvoker));
+    return result;
+  }
+};
+
+
+
+#pragma mark - NativeCameraRollModulePhotoIdentifiersPage
+
+template <typename P0, typename P1, typename P2>
+struct NativeCameraRollModulePhotoIdentifiersPage {
+  P0 edges;
+  P1 page_info;
+  P2 limited;
+  bool operator==(const NativeCameraRollModulePhotoIdentifiersPage &other) const {
+    return edges == other.edges && page_info == other.page_info && limited == other.limited;
+  }
+};
+
+template <typename T>
+struct NativeCameraRollModulePhotoIdentifiersPageBridging {
+  static T types;
+
+  static T fromJs(
+      jsi::Runtime &rt,
+      const jsi::Object &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    T result{
+      bridging::fromJs<decltype(types.edges)>(rt, value.getProperty(rt, "edges"), jsInvoker),
+      bridging::fromJs<decltype(types.page_info)>(rt, value.getProperty(rt, "page_info"), jsInvoker),
+      bridging::fromJs<decltype(types.limited)>(rt, value.getProperty(rt, "limited"), jsInvoker)};
+    return result;
+  }
+
+#ifdef DEBUG
+  static jsi::Array edgesToJs(jsi::Runtime &rt, decltype(types.edges) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static jsi::Object page_infoToJs(jsi::Runtime &rt, decltype(types.page_info) value) {
+    return bridging::toJs(rt, value);
+  }
+
+  static bool limitedToJs(jsi::Runtime &rt, decltype(types.limited) value) {
+    return bridging::toJs(rt, value);
+  }
+#endif
+
+  static jsi::Object toJs(
+      jsi::Runtime &rt,
+      const T &value,
+      const std::shared_ptr<CallInvoker> &jsInvoker) {
+    auto result = facebook::jsi::Object(rt);
+    result.setProperty(rt, "edges", bridging::toJs(rt, value.edges, jsInvoker));
+    result.setProperty(rt, "page_info", bridging::toJs(rt, value.page_info, jsInvoker));
+    if (value.limited) {
+      result.setProperty(rt, "limited", bridging::toJs(rt, value.limited.value(), jsInvoker));
+    }
+    return result;
+  }
+};
+
+class JSI_EXPORT NativeCameraRollModuleCxxSpecJSI : public TurboModule {
+protected:
+  NativeCameraRollModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);
+
+public:
+  virtual jsi::Value saveToCameraRoll(jsi::Runtime &rt, jsi::String uri, jsi::Object options) = 0;
+  virtual jsi::Value getPhotos(jsi::Runtime &rt, jsi::Object params) = 0;
+  virtual jsi::Value getAlbums(jsi::Runtime &rt, jsi::Object params) = 0;
+  virtual jsi::Value deletePhotos(jsi::Runtime &rt, jsi::Array photoUris) = 0;
+  virtual jsi::Value getPhotoByInternalID(jsi::Runtime &rt, jsi::String internalID, jsi::Object options) = 0;
+  virtual jsi::Value getPhotoThumbnail(jsi::Runtime &rt, jsi::String internalID, jsi::Object options) = 0;
+  virtual void addListener(jsi::Runtime &rt, jsi::String eventName) = 0;
+  virtual void removeListeners(jsi::Runtime &rt, double count) = 0;
+
+};
+
+template <typename T>
+class JSI_EXPORT NativeCameraRollModuleCxxSpec : public TurboModule {
+public:
+  jsi::Value create(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
+    return delegate_.create(rt, propName);
+  }
+
+  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& runtime) override {
+    return delegate_.getPropertyNames(runtime);
+  }
+
+  static constexpr std::string_view kModuleName = "RNCCameraRoll";
+
+protected:
+  NativeCameraRollModuleCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
+    : TurboModule(std::string{NativeCameraRollModuleCxxSpec::kModuleName}, jsInvoker),
+      delegate_(reinterpret_cast<T*>(this), jsInvoker) {}
+
+
+private:
+  class Delegate : public NativeCameraRollModuleCxxSpecJSI {
+  public:
+    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
+      NativeCameraRollModuleCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {
+
+    }
+
+    jsi::Value saveToCameraRoll(jsi::Runtime &rt, jsi::String uri, jsi::Object options) override {
+      static_assert(
+          bridging::getParameterCount(&T::saveToCameraRoll) == 3,
+          "Expected saveToCameraRoll(...) to have 3 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::saveToCameraRoll, jsInvoker_, instance_, std::move(uri), std::move(options));
+    }
+    jsi::Value getPhotos(jsi::Runtime &rt, jsi::Object params) override {
+      static_assert(
+          bridging::getParameterCount(&T::getPhotos) == 2,
+          "Expected getPhotos(...) to have 2 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::getPhotos, jsInvoker_, instance_, std::move(params));
+    }
+    jsi::Value getAlbums(jsi::Runtime &rt, jsi::Object params) override {
+      static_assert(
+          bridging::getParameterCount(&T::getAlbums) == 2,
+          "Expected getAlbums(...) to have 2 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::getAlbums, jsInvoker_, instance_, std::move(params));
+    }
+    jsi::Value deletePhotos(jsi::Runtime &rt, jsi::Array photoUris) override {
+      static_assert(
+          bridging::getParameterCount(&T::deletePhotos) == 2,
+          "Expected deletePhotos(...) to have 2 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::deletePhotos, jsInvoker_, instance_, std::move(photoUris));
+    }
+    jsi::Value getPhotoByInternalID(jsi::Runtime &rt, jsi::String internalID, jsi::Object options) override {
+      static_assert(
+          bridging::getParameterCount(&T::getPhotoByInternalID) == 3,
+          "Expected getPhotoByInternalID(...) to have 3 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::getPhotoByInternalID, jsInvoker_, instance_, std::move(internalID), std::move(options));
+    }
+    jsi::Value getPhotoThumbnail(jsi::Runtime &rt, jsi::String internalID, jsi::Object options) override {
+      static_assert(
+          bridging::getParameterCount(&T::getPhotoThumbnail) == 3,
+          "Expected getPhotoThumbnail(...) to have 3 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::getPhotoThumbnail, jsInvoker_, instance_, std::move(internalID), std::move(options));
+    }
+    void addListener(jsi::Runtime &rt, jsi::String eventName) override {
+      static_assert(
+          bridging::getParameterCount(&T::addListener) == 2,
+          "Expected addListener(...) to have 2 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::addListener, jsInvoker_, instance_, std::move(eventName));
+    }
+    void removeListeners(jsi::Runtime &rt, double count) override {
+      static_assert(
+          bridging::getParameterCount(&T::removeListeners) == 2,
+          "Expected removeListeners(...) to have 2 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::removeListeners, jsInvoker_, instance_, std::move(count));
+    }
+
+  private:
+    friend class NativeCameraRollModuleCxxSpec;
+    T *instance_;
+  };
+
+  Delegate delegate_;
+};
+
+
+  class JSI_EXPORT NativeCameraRollPermissionModuleCxxSpecJSI : public TurboModule {
+protected:
+  NativeCameraRollPermissionModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);
+
+public:
+  virtual jsi::Value checkPermission(jsi::Runtime &rt, jsi::String content) = 0;
+  virtual jsi::Value requestReadWritePermission(jsi::Runtime &rt) = 0;
+  virtual jsi::Value requestAddOnlyPermission(jsi::Runtime &rt) = 0;
+  virtual jsi::Value refreshPhotoSelection(jsi::Runtime &rt) = 0;
+  virtual void addListener(jsi::Runtime &rt, jsi::String eventName) = 0;
+  virtual void removeListeners(jsi::Runtime &rt, double count) = 0;
+
+};
+
+template <typename T>
+class JSI_EXPORT NativeCameraRollPermissionModuleCxxSpec : public TurboModule {
+public:
+  jsi::Value create(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
+    return delegate_.create(rt, propName);
+  }
+
+  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& runtime) override {
+    return delegate_.getPropertyNames(runtime);
+  }
+
+  static constexpr std::string_view kModuleName = "RNCCameraRollPermission";
+
+protected:
+  NativeCameraRollPermissionModuleCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
+    : TurboModule(std::string{NativeCameraRollPermissionModuleCxxSpec::kModuleName}, jsInvoker),
+      delegate_(reinterpret_cast<T*>(this), jsInvoker) {}
+
+
+private:
+  class Delegate : public NativeCameraRollPermissionModuleCxxSpecJSI {
+  public:
+    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
+      NativeCameraRollPermissionModuleCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {
+
+    }
+
+    jsi::Value checkPermission(jsi::Runtime &rt, jsi::String content) override {
+      static_assert(
+          bridging::getParameterCount(&T::checkPermission) == 2,
+          "Expected checkPermission(...) to have 2 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::checkPermission, jsInvoker_, instance_, std::move(content));
+    }
+    jsi::Value requestReadWritePermission(jsi::Runtime &rt) override {
+      static_assert(
+          bridging::getParameterCount(&T::requestReadWritePermission) == 1,
+          "Expected requestReadWritePermission(...) to have 1 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::requestReadWritePermission, jsInvoker_, instance_);
+    }
+    jsi::Value requestAddOnlyPermission(jsi::Runtime &rt) override {
+      static_assert(
+          bridging::getParameterCount(&T::requestAddOnlyPermission) == 1,
+          "Expected requestAddOnlyPermission(...) to have 1 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::requestAddOnlyPermission, jsInvoker_, instance_);
+    }
+    jsi::Value refreshPhotoSelection(jsi::Runtime &rt) override {
+      static_assert(
+          bridging::getParameterCount(&T::refreshPhotoSelection) == 1,
+          "Expected refreshPhotoSelection(...) to have 1 parameters");
+
+      return bridging::callFromJs<jsi::Value>(
+          rt, &T::refreshPhotoSelection, jsInvoker_, instance_);
+    }
+    void addListener(jsi::Runtime &rt, jsi::String eventName) override {
+      static_assert(
+          bridging::getParameterCount(&T::addListener) == 2,
+          "Expected addListener(...) to have 2 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::addListener, jsInvoker_, instance_, std::move(eventName));
+    }
+    void removeListeners(jsi::Runtime &rt, double count) override {
+      static_assert(
+          bridging::getParameterCount(&T::removeListeners) == 2,
+          "Expected removeListeners(...) to have 2 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::removeListeners, jsInvoker_, instance_, std::move(count));
+    }
+
+  private:
+    friend class NativeCameraRollPermissionModuleCxxSpec;
+    T *instance_;
+  };
+
+  Delegate delegate_;
+};
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/rncameraroll-generated.cpp b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/rncameraroll-generated.cpp
new file mode 100644
index 0000000..55e8126
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/rncameraroll-generated.cpp
@@ -0,0 +1,116 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniCpp.js
+ */
+
+#include "rncameraroll.h"
+
+namespace facebook::react {
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollModuleSpecJSI_saveToCameraRoll(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "saveToCameraRoll", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollModuleSpecJSI_getPhotos(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getPhotos", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollModuleSpecJSI_getAlbums(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getAlbums", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollModuleSpecJSI_deletePhotos(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "deletePhotos", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollModuleSpecJSI_getPhotoByInternalID(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getPhotoByInternalID", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollModuleSpecJSI_getPhotoThumbnail(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getPhotoThumbnail", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollModuleSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollModuleSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count, cachedMethodId);
+}
+
+NativeCameraRollModuleSpecJSI::NativeCameraRollModuleSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+  methodMap_["saveToCameraRoll"] = MethodMetadata {2, __hostFunction_NativeCameraRollModuleSpecJSI_saveToCameraRoll};
+  methodMap_["getPhotos"] = MethodMetadata {1, __hostFunction_NativeCameraRollModuleSpecJSI_getPhotos};
+  methodMap_["getAlbums"] = MethodMetadata {1, __hostFunction_NativeCameraRollModuleSpecJSI_getAlbums};
+  methodMap_["deletePhotos"] = MethodMetadata {1, __hostFunction_NativeCameraRollModuleSpecJSI_deletePhotos};
+  methodMap_["getPhotoByInternalID"] = MethodMetadata {2, __hostFunction_NativeCameraRollModuleSpecJSI_getPhotoByInternalID};
+  methodMap_["getPhotoThumbnail"] = MethodMetadata {2, __hostFunction_NativeCameraRollModuleSpecJSI_getPhotoThumbnail};
+  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeCameraRollModuleSpecJSI_addListener};
+  methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeCameraRollModuleSpecJSI_removeListeners};
+}
+static facebook::jsi::Value __hostFunction_NativeCameraRollPermissionModuleSpecJSI_checkPermission(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "checkPermission", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollPermissionModuleSpecJSI_requestReadWritePermission(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "requestReadWritePermission", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollPermissionModuleSpecJSI_requestAddOnlyPermission(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "requestAddOnlyPermission", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollPermissionModuleSpecJSI_refreshPhotoSelection(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "refreshPhotoSelection", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollPermissionModuleSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeCameraRollPermissionModuleSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count, cachedMethodId);
+}
+
+NativeCameraRollPermissionModuleSpecJSI::NativeCameraRollPermissionModuleSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+  methodMap_["checkPermission"] = MethodMetadata {1, __hostFunction_NativeCameraRollPermissionModuleSpecJSI_checkPermission};
+  methodMap_["requestReadWritePermission"] = MethodMetadata {0, __hostFunction_NativeCameraRollPermissionModuleSpecJSI_requestReadWritePermission};
+  methodMap_["requestAddOnlyPermission"] = MethodMetadata {0, __hostFunction_NativeCameraRollPermissionModuleSpecJSI_requestAddOnlyPermission};
+  methodMap_["refreshPhotoSelection"] = MethodMetadata {0, __hostFunction_NativeCameraRollPermissionModuleSpecJSI_refreshPhotoSelection};
+  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeCameraRollPermissionModuleSpecJSI_addListener};
+  methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeCameraRollPermissionModuleSpecJSI_removeListeners};
+}
+
+std::shared_ptr<TurboModule> rncameraroll_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
+  if (moduleName == "RNCCameraRoll") {
+    return std::make_shared<NativeCameraRollModuleSpecJSI>(params);
+  }
+  if (moduleName == "RNCCameraRollPermission") {
+    return std::make_shared<NativeCameraRollPermissionModuleSpecJSI>(params);
+  }
+  return nullptr;
+}
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/rncameraroll.h b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/rncameraroll.h
new file mode 100644
index 0000000..0272874
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/jni/rncameraroll.h
@@ -0,0 +1,39 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/JavaTurboModule.h>
+#include <ReactCommon/TurboModule.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+/**
+ * JNI C++ class for module 'NativeCameraRollModule'
+ */
+class JSI_EXPORT NativeCameraRollModuleSpecJSI : public JavaTurboModule {
+public:
+  NativeCameraRollModuleSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+/**
+ * JNI C++ class for module 'NativeCameraRollPermissionModule'
+ */
+class JSI_EXPORT NativeCameraRollPermissionModuleSpecJSI : public JavaTurboModule {
+public:
+  NativeCameraRollPermissionModuleSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+
+JSI_EXPORT
+std::shared_ptr<TurboModule> rncameraroll_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params);
+
+} // namespace facebook::react
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/schema.json b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/schema.json
new file mode 100644
index 0000000..ef7c6de
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/source/codegen/schema.json
@@ -0,0 +1 @@
+{"modules":{"NativeCameraRollModule":{"type":"NativeModule","aliasMap":{"Album":{"type":"ObjectTypeAnnotation","properties":[{"name":"id","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"title","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"count","optional":false,"typeAnnotation":{"type":"NumberTypeAnnotation"}},{"name":"type","optional":false,"typeAnnotation":{"type":"StringLiteralUnionTypeAnnotation","types":[{"type":"StringLiteralTypeAnnotation","value":"All"},{"type":"StringLiteralTypeAnnotation","value":"Album"},{"type":"StringLiteralTypeAnnotation","value":"SmartAlbum"}]}},{"name":"subtype","optional":true,"typeAnnotation":{"type":"StringLiteralUnionTypeAnnotation","types":[{"type":"StringLiteralTypeAnnotation","value":"AlbumRegular"},{"type":"StringLiteralTypeAnnotation","value":"AlbumSyncedEvent"},{"type":"StringLiteralTypeAnnotation","value":"AlbumSyncedFaces"},{"type":"StringLiteralTypeAnnotation","value":"AlbumSyncedAlbum"},{"type":"StringLiteralTypeAnnotation","value":"AlbumImported"},{"type":"StringLiteralTypeAnnotation","value":"AlbumMyPhotoStream"},{"type":"StringLiteralTypeAnnotation","value":"AlbumCloudShared"},{"type":"StringLiteralTypeAnnotation","value":"Unknown"}]}}]},"PhotoIdentifier":{"type":"ObjectTypeAnnotation","properties":[{"name":"node","optional":false,"typeAnnotation":{"type":"ObjectTypeAnnotation","properties":[{"name":"id","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"type","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"subTypes","optional":false,"typeAnnotation":{"type":"StringLiteralUnionTypeAnnotation","types":[{"type":"StringLiteralTypeAnnotation","value":"PhotoPanorama"},{"type":"StringLiteralTypeAnnotation","value":"PhotoHDR"},{"type":"StringLiteralTypeAnnotation","value":"PhotoScreenshot"},{"type":"StringLiteralTypeAnnotation","value":"PhotoLive"},{"type":"StringLiteralTypeAnnotation","value":"PhotoDepthEffect"},{"type":"StringLiteralTypeAnnotation","value":"VideoStreamed"},{"type":"StringLiteralTypeAnnotation","value":"VideoHighFrameRate"},{"type":"StringLiteralTypeAnnotation","value":"VideoTimelapse"}]}},{"name":"sourceType","optional":false,"typeAnnotation":{"type":"StringLiteralUnionTypeAnnotation","types":[{"type":"StringLiteralTypeAnnotation","value":"UserLibrary"},{"type":"StringLiteralTypeAnnotation","value":"CloudShared"}]}},{"name":"group_name","optional":false,"typeAnnotation":{"type":"ArrayTypeAnnotation","elementType":{"type":"StringTypeAnnotation"}}},{"name":"image","optional":false,"typeAnnotation":{"type":"ObjectTypeAnnotation","properties":[{"name":"filename","optional":false,"typeAnnotation":{"type":"NullableTypeAnnotation","typeAnnotation":{"type":"StringTypeAnnotation"}}},{"name":"filepath","optional":false,"typeAnnotation":{"type":"NullableTypeAnnotation","typeAnnotation":{"type":"StringTypeAnnotation"}}},{"name":"extension","optional":false,"typeAnnotation":{"type":"NullableTypeAnnotation","typeAnnotation":{"type":"StringTypeAnnotation"}}},{"name":"uri","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"height","optional":false,"typeAnnotation":{"type":"NumberTypeAnnotation"}},{"name":"width","optional":false,"typeAnnotation":{"type":"NumberTypeAnnotation"}},{"name":"fileSize","optional":false,"typeAnnotation":{"type":"NullableTypeAnnotation","typeAnnotation":{"type":"NumberTypeAnnotation"}}},{"name":"playableDuration","optional":false,"typeAnnotation":{"type":"NumberTypeAnnotation"}},{"name":"orientation","optional":false,"typeAnnotation":{"type":"NullableTypeAnnotation","typeAnnotation":{"type":"NumberTypeAnnotation"}}}]}},{"name":"timestamp","optional":false,"typeAnnotation":{"type":"NumberTypeAnnotation"}},{"name":"modificationTimestamp","optional":false,"typeAnnotation":{"type":"NumberTypeAnnotation"}},{"name":"location","optional":false,"typeAnnotation":{"type":"NullableTypeAnnotation","typeAnnotation":{"type":"ObjectTypeAnnotation","properties":[{"name":"latitude","optional":true,"typeAnnotation":{"type":"NumberTypeAnnotation"}},{"name":"longitude","optional":true,"typeAnnotation":{"type":"NumberTypeAnnotation"}},{"name":"altitude","optional":true,"typeAnnotation":{"type":"NumberTypeAnnotation"}},{"name":"heading","optional":true,"typeAnnotation":{"type":"NumberTypeAnnotation"}},{"name":"speed","optional":true,"typeAnnotation":{"type":"NumberTypeAnnotation"}}]}}}]}}]},"PhotoIdentifiersPage":{"type":"ObjectTypeAnnotation","properties":[{"name":"edges","optional":false,"typeAnnotation":{"type":"ArrayTypeAnnotation","elementType":{"type":"TypeAliasTypeAnnotation","name":"PhotoIdentifier"}}},{"name":"page_info","optional":false,"typeAnnotation":{"type":"ObjectTypeAnnotation","properties":[{"name":"has_next_page","optional":false,"typeAnnotation":{"type":"BooleanTypeAnnotation"}},{"name":"start_cursor","optional":true,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"end_cursor","optional":true,"typeAnnotation":{"type":"StringTypeAnnotation"}}]}},{"name":"limited","optional":true,"typeAnnotation":{"type":"BooleanTypeAnnotation"}}]}},"enumMap":{},"spec":{"eventEmitters":[],"methods":[{"name":"saveToCameraRoll","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"TypeAliasTypeAnnotation","name":"PhotoIdentifier"}},"params":[{"name":"uri","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"options","optional":false,"typeAnnotation":{"type":"GenericObjectTypeAnnotation"}}]}},{"name":"getPhotos","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"TypeAliasTypeAnnotation","name":"PhotoIdentifiersPage"}},"params":[{"name":"params","optional":false,"typeAnnotation":{"type":"GenericObjectTypeAnnotation"}}]}},{"name":"getAlbums","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"ArrayTypeAnnotation","elementType":{"type":"TypeAliasTypeAnnotation","name":"Album"}}},"params":[{"name":"params","optional":false,"typeAnnotation":{"type":"GenericObjectTypeAnnotation"}}]}},{"name":"deletePhotos","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"VoidTypeAnnotation"}},"params":[{"name":"photoUris","optional":false,"typeAnnotation":{"type":"ArrayTypeAnnotation","elementType":{"type":"StringTypeAnnotation"}}}]}},{"name":"getPhotoByInternalID","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"TypeAliasTypeAnnotation","name":"PhotoIdentifier"}},"params":[{"name":"internalID","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"options","optional":false,"typeAnnotation":{"type":"GenericObjectTypeAnnotation"}}]}},{"name":"getPhotoThumbnail","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"VoidTypeAnnotation"}},"params":[{"name":"internalID","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"options","optional":false,"typeAnnotation":{"type":"GenericObjectTypeAnnotation"}}]}},{"name":"addListener","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"VoidTypeAnnotation"},"params":[{"name":"eventName","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}}]}},{"name":"removeListeners","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"VoidTypeAnnotation"},"params":[{"name":"count","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}}]}}]},"moduleName":"RNCCameraRoll"},"NativeCameraRollPermissionModule":{"type":"NativeModule","aliasMap":{},"enumMap":{},"spec":{"eventEmitters":[],"methods":[{"name":"checkPermission","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"StringLiteralUnionTypeAnnotation","types":[{"type":"StringLiteralTypeAnnotation","value":"granted"},{"type":"StringLiteralTypeAnnotation","value":"limited"},{"type":"StringLiteralTypeAnnotation","value":"denied"},{"type":"StringLiteralTypeAnnotation","value":"unavailable"},{"type":"StringLiteralTypeAnnotation","value":"blocked"},{"type":"StringLiteralTypeAnnotation","value":"not-determined"}]}},"params":[{"name":"content","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}}]}},{"name":"requestReadWritePermission","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"StringLiteralUnionTypeAnnotation","types":[{"type":"StringLiteralTypeAnnotation","value":"granted"},{"type":"StringLiteralTypeAnnotation","value":"limited"},{"type":"StringLiteralTypeAnnotation","value":"denied"},{"type":"StringLiteralTypeAnnotation","value":"unavailable"},{"type":"StringLiteralTypeAnnotation","value":"blocked"},{"type":"StringLiteralTypeAnnotation","value":"not-determined"}]}},"params":[]}},{"name":"requestAddOnlyPermission","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"StringLiteralUnionTypeAnnotation","types":[{"type":"StringLiteralTypeAnnotation","value":"granted"},{"type":"StringLiteralTypeAnnotation","value":"limited"},{"type":"StringLiteralTypeAnnotation","value":"denied"},{"type":"StringLiteralTypeAnnotation","value":"unavailable"},{"type":"StringLiteralTypeAnnotation","value":"blocked"},{"type":"StringLiteralTypeAnnotation","value":"not-determined"}]}},"params":[]}},{"name":"refreshPhotoSelection","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"PromiseTypeAnnotation","elementType":{"type":"BooleanTypeAnnotation"}},"params":[]}},{"name":"addListener","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"VoidTypeAnnotation"},"params":[{"name":"eventName","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}}]}},{"name":"removeListeners","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"VoidTypeAnnotation"},"params":[{"name":"count","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}}]}}]},"moduleName":"RNCCameraRollPermission"}}}
\ No newline at end of file
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml
new file mode 100644
index 0000000..5be9ccb
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.reactnativecommunity.cameraroll" >
+
+    <uses-sdk android:minSdkVersion="24" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json
new file mode 100644
index 0000000..b97236b
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json
@@ -0,0 +1,18 @@
+{
+  "version": 3,
+  "artifactType": {
+    "type": "AAPT_FRIENDLY_MERGED_MANIFESTS",
+    "kind": "Directory"
+  },
+  "applicationId": "com.reactnativecommunity.cameraroll",
+  "variantName": "debug",
+  "elements": [
+    {
+      "type": "SINGLE",
+      "filters": [],
+      "attributes": [],
+      "outputFile": "AndroidManifest.xml"
+    }
+  ],
+  "elementType": "File"
+}
\ No newline at end of file
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties
new file mode 100644
index 0000000..1211b1e
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties
@@ -0,0 +1,6 @@
+aarFormatVersion=1.0
+aarMetadataVersion=1.0
+minCompileSdk=1
+minCompileSdkExtension=0
+minAndroidGradlePluginVersion=1.0.0
+coreLibraryDesugaringEnabled=false
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/annotation_processor_list/debug/javaPreCompileDebug/annotationProcessors.json b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/annotation_processor_list/debug/javaPreCompileDebug/annotationProcessors.json
new file mode 100644
index 0000000..9e26dfe
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/annotation_processor_list/debug/javaPreCompileDebug/annotationProcessors.json
@@ -0,0 +1 @@
+{}
\ No newline at end of file
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/compile_library_classes_jar/debug/bundleLibCompileToJarDebug/classes.jar b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/compile_library_classes_jar/debug/bundleLibCompileToJarDebug/classes.jar
new file mode 100644
index 0000000..8087432
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/compile_library_classes_jar/debug/bundleLibCompileToJarDebug/classes.jar differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/compile_r_class_jar/debug/generateDebugRFile/R.jar b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/compile_r_class_jar/debug/generateDebugRFile/R.jar
new file mode 100644
index 0000000..3a8867a
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/compile_r_class_jar/debug/generateDebugRFile/R.jar differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/compile_symbol_list/debug/generateDebugRFile/R.txt b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/compile_symbol_list/debug/generateDebugRFile/R.txt
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
new file mode 100644
index 0000000..1ec1d24
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
@@ -0,0 +1 @@
+#Sat Jun 21 00:14:42 WIB 2025
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
new file mode 100644
index 0000000..2f7872a
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/debug/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/debug/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/res/resValues/debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated" generated-set="generated$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/build/generated/res/resValues/debug"/></dataSet><mergedItems/></merger>
\ No newline at end of file
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/mergeDebugAssets/merger.xml b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/mergeDebugAssets/merger.xml
new file mode 100644
index 0000000..da0d6ad
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/mergeDebugAssets/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/assets"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/debug/assets"/></dataSet><dataSet config="generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/shader_assets/debug/compileDebugShaders/out"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml
new file mode 100644
index 0000000..de26918
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/jniLibs"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/debug/jniLibs"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/mergeDebugShaders/merger.xml b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/mergeDebugShaders/merger.xml
new file mode 100644
index 0000000..f978fc2
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/incremental/mergeDebugShaders/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/shaders"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/debug/shaders"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/BuildConfig.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/BuildConfig.class
new file mode 100644
index 0000000..8f20855
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/BuildConfig.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$1.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$1.class
new file mode 100644
index 0000000..7e227b9
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$1.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$2.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$2.class
new file mode 100644
index 0000000..f77bcc5
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$2.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$DeletePhotos.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$DeletePhotos.class
new file mode 100644
index 0000000..f3e328e
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$DeletePhotos.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$GetMediaTask.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$GetMediaTask.class
new file mode 100644
index 0000000..1d28f02
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$GetMediaTask.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$SaveToCameraRoll.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$SaveToCameraRoll.class
new file mode 100644
index 0000000..bdc64ac
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule$SaveToCameraRoll.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule.class
new file mode 100644
index 0000000..e282f9d
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollModule.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollPackage$1.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollPackage$1.class
new file mode 100644
index 0000000..8141524
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollPackage$1.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollPackage.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollPackage.class
new file mode 100644
index 0000000..6afb856
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/CameraRollPackage.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/NativeCameraRollModuleSpec.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/NativeCameraRollModuleSpec.class
new file mode 100644
index 0000000..967e2c3
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/NativeCameraRollModuleSpec.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/NativeCameraRollPermissionModuleSpec.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/NativeCameraRollPermissionModuleSpec.class
new file mode 100644
index 0000000..c528345
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/NativeCameraRollPermissionModuleSpec.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/Utils.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/Utils.class
new file mode 100644
index 0000000..154de8b
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/reactnativecommunity/cameraroll/Utils.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/local_only_symbol_list/debug/parseDebugLocalResources/R-def.txt b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/local_only_symbol_list/debug/parseDebugLocalResources/R-def.txt
new file mode 100644
index 0000000..78ac5b8
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/local_only_symbol_list/debug/parseDebugLocalResources/R-def.txt
@@ -0,0 +1,2 @@
+R_DEF: Internal format may change without notice
+local
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt
new file mode 100644
index 0000000..80f2b93
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt
@@ -0,0 +1,7 @@
+1<?xml version="1.0" encoding="utf-8"?>
+2<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+3    package="com.reactnativecommunity.cameraroll" >
+4
+5    <uses-sdk android:minSdkVersion="24" />
+6
+7</manifest>
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml
new file mode 100644
index 0000000..5be9ccb
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.reactnativecommunity.cameraroll" >
+
+    <uses-sdk android:minSdkVersion="24" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json
new file mode 100644
index 0000000..0637a08
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json
@@ -0,0 +1 @@
+[]
\ No newline at end of file
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt
new file mode 100644
index 0000000..08f4ebe
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt
@@ -0,0 +1 @@
+0 Warning/Error
\ No newline at end of file
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/BuildConfig.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/BuildConfig.class
new file mode 100644
index 0000000..8f20855
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/BuildConfig.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$1.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$1.class
new file mode 100644
index 0000000..7e227b9
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$1.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$2.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$2.class
new file mode 100644
index 0000000..f77bcc5
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$2.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$DeletePhotos.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$DeletePhotos.class
new file mode 100644
index 0000000..f3e328e
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$DeletePhotos.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$GetMediaTask.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$GetMediaTask.class
new file mode 100644
index 0000000..1d28f02
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$GetMediaTask.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$SaveToCameraRoll.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$SaveToCameraRoll.class
new file mode 100644
index 0000000..bdc64ac
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule$SaveToCameraRoll.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule.class
new file mode 100644
index 0000000..e282f9d
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollModule.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollPackage$1.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollPackage$1.class
new file mode 100644
index 0000000..8141524
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollPackage$1.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollPackage.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollPackage.class
new file mode 100644
index 0000000..6afb856
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/CameraRollPackage.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/NativeCameraRollModuleSpec.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/NativeCameraRollModuleSpec.class
new file mode 100644
index 0000000..967e2c3
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/NativeCameraRollModuleSpec.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/NativeCameraRollPermissionModuleSpec.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/NativeCameraRollPermissionModuleSpec.class
new file mode 100644
index 0000000..c528345
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/NativeCameraRollPermissionModuleSpec.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/Utils.class b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/Utils.class
new file mode 100644
index 0000000..154de8b
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_dir/debug/bundleLibRuntimeToDirDebug/com/reactnativecommunity/cameraroll/Utils.class differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_jar/debug/bundleLibRuntimeToJarDebug/classes.jar b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_jar/debug/bundleLibRuntimeToJarDebug/classes.jar
new file mode 100644
index 0000000..8509010
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/runtime_library_classes_jar/debug/bundleLibRuntimeToJarDebug/classes.jar differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/symbol_list_with_package_name/debug/generateDebugRFile/package-aware-r.txt b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/symbol_list_with_package_name/debug/generateDebugRFile/package-aware-r.txt
new file mode 100644
index 0000000..23c3f31
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/intermediates/symbol_list_with_package_name/debug/generateDebugRFile/package-aware-r.txt
@@ -0,0 +1 @@
+com.reactnativecommunity.cameraroll
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/outputs/logs/manifest-merger-debug-report.txt b/node_modules/@react-native-camera-roll/camera-roll/android/build/outputs/logs/manifest-merger-debug-report.txt
new file mode 100644
index 0000000..b2108c3
--- /dev/null
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/build/outputs/logs/manifest-merger-debug-report.txt
@@ -0,0 +1,16 @@
+-- Merging decision tree log ---
+manifest
+ADDED from /Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/AndroidManifest.xml:2:1-5:12
+INJECTED from /Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/AndroidManifest.xml:2:1-5:12
+	package
+		INJECTED from /Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/AndroidManifest.xml
+	xmlns:android
+		ADDED from /Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/AndroidManifest.xml:2:11-69
+uses-sdk
+INJECTED from /Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from /Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/AndroidManifest.xml
+INJECTED from /Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/AndroidManifest.xml
+	android:targetSdkVersion
+		INJECTED from /Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/AndroidManifest.xml
+	android:minSdkVersion
+		INJECTED from /Users/muh_iqbal/Documents/workspaces/MemeGenApp/node_modules/@react-native-camera-roll/camera-roll/android/src/main/AndroidManifest.xml
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/build/tmp/compileDebugJavaWithJavac/previous-compilation-data.bin b/node_modules/@react-native-camera-roll/camera-roll/android/build/tmp/compileDebugJavaWithJavac/previous-compilation-data.bin
new file mode 100644
index 0000000..1dc40c9
Binary files /dev/null and b/node_modules/@react-native-camera-roll/camera-roll/android/build/tmp/compileDebugJavaWithJavac/previous-compilation-data.bin differ
diff --git a/node_modules/@react-native-camera-roll/camera-roll/android/src/main/java/com/reactnativecommunity/cameraroll/CameraRollPackage.java b/node_modules/@react-native-camera-roll/camera-roll/android/src/main/java/com/reactnativecommunity/cameraroll/CameraRollPackage.java
index 4737fd8..6a1b075 100644
--- a/node_modules/@react-native-camera-roll/camera-roll/android/src/main/java/com/reactnativecommunity/cameraroll/CameraRollPackage.java
+++ b/node_modules/@react-native-camera-roll/camera-roll/android/src/main/java/com/reactnativecommunity/cameraroll/CameraRollPackage.java
@@ -32,7 +32,7 @@ public class CameraRollPackage extends TurboReactPackage implements ViewManagerO
     /** {@inheritDoc} */
     @Override
     public List<String> getViewManagerNames(ReactApplicationContext reactContext) {
-        return null;
+        return new ArrayList<String>();
     }
 
     @Override
